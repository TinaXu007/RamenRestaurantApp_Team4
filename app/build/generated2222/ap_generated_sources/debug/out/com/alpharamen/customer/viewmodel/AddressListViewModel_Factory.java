// Generated by Dagger (https://google.github.io/dagger).
package com.alpharamen.customer.viewmodel;

import com.alpharamen.customer.data.repository.FoodRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AddressListViewModel_Factory implements Factory<AddressListViewModel> {
  private final Provider<FoodRepository> addressListRepositoryProvider;

  public AddressListViewModel_Factory(Provider<FoodRepository> addressListRepositoryProvider) {
    this.addressListRepositoryProvider = addressListRepositoryProvider;
  }

  @Override
  public AddressListViewModel get() {
    return provideInstance(addressListRepositoryProvider);
  }

  public static AddressListViewModel provideInstance(
      Provider<FoodRepository> addressListRepositoryProvider) {
    return new AddressListViewModel(addressListRepositoryProvider.get());
  }

  public static AddressListViewModel_Factory create(
      Provider<FoodRepository> addressListRepositoryProvider) {
    return new AddressListViewModel_Factory(addressListRepositoryProvider);
  }

  public static AddressListViewModel newAddressListViewModel(FoodRepository addressListRepository) {
    return new AddressListViewModel(addressListRepository);
  }
}
