// Generated by Dagger (https://google.github.io/dagger).
package com.alpharamen.customer.view.ui.change_location;

import com.alpharamen.customer.base.BaseActivity_MembersInjector;
import com.alpharamen.customer.factory.ViewModelProviderFactory;
import com.alpharamen.customer.utils.ToastUtils;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class ChangeLocationActivity_MembersInjector
    implements MembersInjector<ChangeLocationActivity> {
  private final Provider<ToastUtils> toastUtilsProvider;

  private final Provider<ViewModelProviderFactory> mviewmodelfactoryProvider;

  public ChangeLocationActivity_MembersInjector(
      Provider<ToastUtils> toastUtilsProvider,
      Provider<ViewModelProviderFactory> mviewmodelfactoryProvider) {
    this.toastUtilsProvider = toastUtilsProvider;
    this.mviewmodelfactoryProvider = mviewmodelfactoryProvider;
  }

  public static MembersInjector<ChangeLocationActivity> create(
      Provider<ToastUtils> toastUtilsProvider,
      Provider<ViewModelProviderFactory> mviewmodelfactoryProvider) {
    return new ChangeLocationActivity_MembersInjector(
        toastUtilsProvider, mviewmodelfactoryProvider);
  }

  @Override
  public void injectMembers(ChangeLocationActivity instance) {
    BaseActivity_MembersInjector.injectToastUtils(instance, toastUtilsProvider.get());
    injectMviewmodelfactory(instance, mviewmodelfactoryProvider.get());
  }

  public static void injectMviewmodelfactory(
      ChangeLocationActivity instance, ViewModelProviderFactory mviewmodelfactory) {
    instance.mviewmodelfactory = mviewmodelfactory;
  }
}
