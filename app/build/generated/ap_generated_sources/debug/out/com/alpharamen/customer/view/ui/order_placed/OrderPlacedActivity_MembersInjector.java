// Generated by Dagger (https://google.github.io/dagger).
package com.alpharamen.customer.view.ui.order_placed;

import com.alpharamen.customer.base.BaseActivity_MembersInjector;
import com.alpharamen.customer.factory.ViewModelProviderFactory;
import com.alpharamen.customer.utils.ToastUtils;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class OrderPlacedActivity_MembersInjector
    implements MembersInjector<OrderPlacedActivity> {
  private final Provider<ToastUtils> toastUtilsProvider;

  private final Provider<ViewModelProviderFactory> mViewModelFactoryProvider;

  public OrderPlacedActivity_MembersInjector(
      Provider<ToastUtils> toastUtilsProvider,
      Provider<ViewModelProviderFactory> mViewModelFactoryProvider) {
    this.toastUtilsProvider = toastUtilsProvider;
    this.mViewModelFactoryProvider = mViewModelFactoryProvider;
  }

  public static MembersInjector<OrderPlacedActivity> create(
      Provider<ToastUtils> toastUtilsProvider,
      Provider<ViewModelProviderFactory> mViewModelFactoryProvider) {
    return new OrderPlacedActivity_MembersInjector(toastUtilsProvider, mViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(OrderPlacedActivity instance) {
    BaseActivity_MembersInjector.injectToastUtils(instance, toastUtilsProvider.get());
    injectMViewModelFactory(instance, mViewModelFactoryProvider.get());
  }

  public static void injectMViewModelFactory(
      OrderPlacedActivity instance, ViewModelProviderFactory mViewModelFactory) {
    instance.mViewModelFactory = mViewModelFactory;
  }
}
