// Generated by Dagger (https://google.github.io/dagger).
package com.alpharamen.customer.viewmodel;

import com.alpharamen.customer.data.repository.FoodRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class SearchViewModel_Factory implements Factory<SearchViewModel> {
  private final Provider<FoodRepository> searchRepositoryProvider;

  public SearchViewModel_Factory(Provider<FoodRepository> searchRepositoryProvider) {
    this.searchRepositoryProvider = searchRepositoryProvider;
  }

  @Override
  public SearchViewModel get() {
    return provideInstance(searchRepositoryProvider);
  }

  public static SearchViewModel provideInstance(Provider<FoodRepository> searchRepositoryProvider) {
    return new SearchViewModel(searchRepositoryProvider.get());
  }

  public static SearchViewModel_Factory create(Provider<FoodRepository> searchRepositoryProvider) {
    return new SearchViewModel_Factory(searchRepositoryProvider);
  }

  public static SearchViewModel newSearchViewModel(FoodRepository searchRepository) {
    return new SearchViewModel(searchRepository);
  }
}
