// Generated by Dagger (https://google.github.io/dagger).
package com.alpharamen.customer.viewmodel;

import com.alpharamen.customer.data.repository.FoodRepository;
import com.alpharamen.customer.utils.InternetUtils;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<FoodRepository> itemListRepositoryProvider;

  private final Provider<InternetUtils> internetUtilsProvider;

  public HomeViewModel_Factory(
      Provider<FoodRepository> itemListRepositoryProvider,
      Provider<InternetUtils> internetUtilsProvider) {
    this.itemListRepositoryProvider = itemListRepositoryProvider;
    this.internetUtilsProvider = internetUtilsProvider;
  }

  @Override
  public HomeViewModel get() {
    return provideInstance(itemListRepositoryProvider, internetUtilsProvider);
  }

  public static HomeViewModel provideInstance(
      Provider<FoodRepository> itemListRepositoryProvider,
      Provider<InternetUtils> internetUtilsProvider) {
    return new HomeViewModel(itemListRepositoryProvider.get(), internetUtilsProvider.get());
  }

  public static HomeViewModel_Factory create(
      Provider<FoodRepository> itemListRepositoryProvider,
      Provider<InternetUtils> internetUtilsProvider) {
    return new HomeViewModel_Factory(itemListRepositoryProvider, internetUtilsProvider);
  }

  public static HomeViewModel newHomeViewModel(
      FoodRepository itemListRepository, InternetUtils internetUtils) {
    return new HomeViewModel(itemListRepository, internetUtils);
  }
}
