// Generated by data binding compiler. Do not edit!
package com.alpharamen.customer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.alpharamen.customer.R;
import com.alpharamen.customer.data.models.NotificationItemModel;
import com.alpharamen.customer.view.customview.WacTextView;
import com.alpharamen.customer.view.listener.OnAdapterSelectedListener;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RecyclerViewNotificationSingleItemBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardViewNotification;

  @NonNull
  public final CircleImageView circleImageView;

  @NonNull
  public final ConstraintLayout constraintLayoutDetail;

  @NonNull
  public final ConstraintLayout constraintLayoutVisible;

  @NonNull
  public final ImageView imageViewDestinationLoc;

  @NonNull
  public final ImageView imageViewSource;

  @NonNull
  public final ImageView imageViewUpArrow;

  @NonNull
  public final TextView textViewDestinationAddress;

  @NonNull
  public final WacTextView textViewNotification;

  @NonNull
  public final TextView textViewSource;

  @NonNull
  public final TextView textViewSourceAddress;

  @NonNull
  public final View viewDottedLine;

  @NonNull
  public final View viewNotificationHead;

  @Bindable
  protected Integer mArrrow;

  @Bindable
  protected NotificationItemModel mItem;

  @Bindable
  protected OnAdapterSelectedListener mListener;

  protected RecyclerViewNotificationSingleItemBinding(Object _bindingComponent, View _root,
      int _localFieldCount, CardView cardViewNotification, CircleImageView circleImageView,
      ConstraintLayout constraintLayoutDetail, ConstraintLayout constraintLayoutVisible,
      ImageView imageViewDestinationLoc, ImageView imageViewSource, ImageView imageViewUpArrow,
      TextView textViewDestinationAddress, WacTextView textViewNotification,
      TextView textViewSource, TextView textViewSourceAddress, View viewDottedLine,
      View viewNotificationHead) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardViewNotification = cardViewNotification;
    this.circleImageView = circleImageView;
    this.constraintLayoutDetail = constraintLayoutDetail;
    this.constraintLayoutVisible = constraintLayoutVisible;
    this.imageViewDestinationLoc = imageViewDestinationLoc;
    this.imageViewSource = imageViewSource;
    this.imageViewUpArrow = imageViewUpArrow;
    this.textViewDestinationAddress = textViewDestinationAddress;
    this.textViewNotification = textViewNotification;
    this.textViewSource = textViewSource;
    this.textViewSourceAddress = textViewSourceAddress;
    this.viewDottedLine = viewDottedLine;
    this.viewNotificationHead = viewNotificationHead;
  }

  public abstract void setArrrow(@Nullable Integer arrrow);

  @Nullable
  public Integer getArrrow() {
    return mArrrow;
  }

  public abstract void setItem(@Nullable NotificationItemModel item);

  @Nullable
  public NotificationItemModel getItem() {
    return mItem;
  }

  public abstract void setListener(@Nullable OnAdapterSelectedListener listener);

  @Nullable
  public OnAdapterSelectedListener getListener() {
    return mListener;
  }

  @NonNull
  public static RecyclerViewNotificationSingleItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.recycler_view_notification_single_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RecyclerViewNotificationSingleItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RecyclerViewNotificationSingleItemBinding>inflateInternal(inflater, R.layout.recycler_view_notification_single_item, root, attachToRoot, component);
  }

  @NonNull
  public static RecyclerViewNotificationSingleItemBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.recycler_view_notification_single_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RecyclerViewNotificationSingleItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RecyclerViewNotificationSingleItemBinding>inflateInternal(inflater, R.layout.recycler_view_notification_single_item, null, false, component);
  }

  public static RecyclerViewNotificationSingleItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RecyclerViewNotificationSingleItemBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (RecyclerViewNotificationSingleItemBinding)bind(component, view, R.layout.recycler_view_notification_single_item);
  }
}
